// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NKnowledge;

namespace NKnowledge.Migrations
{
    [DbContext(typeof(NKnowledgeDB))]
    [Migration("20210609063821_A1")]
    partial class A1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.5");

            modelBuilder.Entity("NKnowledge.Tables.Line", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("SourceID")
                        .HasColumnType("int");

                    b.Property<int>("TargetID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("SourceID");

                    b.HasIndex("TargetID");

                    b.ToTable("Line");
                });

            modelBuilder.Entity("NKnowledge.Tables.Node", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasMaxLength(127)
                        .HasColumnType("varchar(127)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("Node");
                });

            modelBuilder.Entity("NKnowledge.Tables.Line", b =>
                {
                    b.HasOne("NKnowledge.Tables.Node", "Source")
                        .WithMany()
                        .HasForeignKey("SourceID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NKnowledge.Tables.Node", "Target")
                        .WithMany()
                        .HasForeignKey("TargetID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Source");

                    b.Navigation("Target");
                });
#pragma warning restore 612, 618
        }
    }
}
